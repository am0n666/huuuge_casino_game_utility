get_options()
{
source `pwd`/.settings

PDIR=$1

count=0
for f in $PDIR/*
do
	count=$(command expr $count + 1)
	filename=$(basename "$f")
	fname="${filename%.*}"
	echo $count "$fname" >> $TEMP_FILES_PATH/restopts.$$
done

OPTIONS=(
`cat $TEMP_FILES_PATH/restopts.$$`
)

LRF=$PDIR/.last_restored

if [ ! -e $LRF ]
then
	MM_TITLE="Last restored : BRAK"
else
	MM_TITLE="Last restored : "`cat $LRF`
fi

}

get_selected_profile_name()
{
count=0
for f in $1/*
do
	count=$(command expr $count + 1)
	filename=$(basename "$f")
	fname="${filename%.*}"
	if [ "$2" = "$count" ]
	then
		#			echo $fname > $TEMP_FILES_PATH/loaded_profile.$$
		echo $fname #> $WORK_DIR/loaded_profile.$$
	fi
done
}

restore_dialog()
{
source `pwd`/.settings
source $TESTS_DIR/if_dir_exists
source $SCRIPTS_DIR/restore_profile
source $SCRIPTS_DIR/cnt_files



if [ -n "$1" ]
then
	SF=`if_dir_exists $1`
	
	if [ $SF == 0 ]
	then
		dialog $dlg_begin \
		--backtitle "$DIALOG_BACKGROUND_TITLE" \
		--title "Error" \
		--clear \
		--msgbox "Dir: $1 not found" 10 $DLGSZER
		clear
		exit 0
	else
		
		FCOUNT=`cnt_files $1`
		if [ $FCOUNT == 0 ]
		then
			echo "No backups found in th this folder."
			exit 0
		fi
		
		get_options $1
		
		LINES_COUNT=`expr 7 + $(find $1/*.tar -type f | wc -l)`
		
		dialog  $dlg_begin --clear \
		--backtitle "$DIALOG_BACKGROUND_TITLE" \
		--title "$MM_TITLE" \
		--menu "Use [UP/DOWN] key to move" $LINES_COUNT $DLGSZER \
		16 "${OPTIONS[@]}" 2> $TEMP_FILES_PATH/menuchoices.$$
		
		retopt=$?
		choice=`cat $TEMP_FILES_PATH/menuchoices.$$`
		
		if [ -n "$choice" ]
		then
			PNAME=$(get_selected_profile_name $1 $choice)
			
			restore_profile $1 $PNAME
		fi
		
		clear
	fi
fi
}

